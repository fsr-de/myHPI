# Generated by Django 4.0.6 on 2022-08-29 16:01

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtailmarkdown.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("wagtailcore", "0052_pagelogentry"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AbbreviationExplanation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("abbreviation", models.CharField(max_length=255)),
                ("explanation", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="BasePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("is_public", models.BooleanField()),
                (
                    "visible_for",
                    modelcluster.fields.ParentalManyToManyField(
                        blank=True, related_name="visible_basepages", to="auth.group"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="MinutesLabel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True, verbose_name="name")),
                ("slug", models.SlugField(max_length=100, unique=True, verbose_name="slug")),
            ],
            options={
                "verbose_name": "minutes label",
                "verbose_name_plural": "minutes labels",
            },
        ),
        migrations.CreateModel(
            name="FirstLevelMenuItem",
            fields=[
                (
                    "basepage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.basepage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.basepage",),
        ),
        migrations.CreateModel(
            name="InformationPage",
            fields=[
                (
                    "basepage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.basepage",
                    ),
                ),
                ("body", wagtailmarkdown.fields.MarkdownField()),
                ("author_visible", models.BooleanField()),
            ],
            options={
                "abstract": False,
            },
            bases=("core.basepage",),
        ),
        migrations.CreateModel(
            name="Minutes",
            fields=[
                (
                    "basepage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.basepage",
                    ),
                ),
                ("date", models.DateField()),
                ("body", wagtailmarkdown.fields.MarkdownField()),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="author",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.basepage",),
        ),
        migrations.CreateModel(
            name="RootPage",
            fields=[
                (
                    "informationpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.informationpage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.informationpage",),
        ),
        migrations.CreateModel(
            name="SecondLevelMenuItem",
            fields=[
                (
                    "firstlevelmenuitem_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.firstlevelmenuitem",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.firstlevelmenuitem",),
        ),
        migrations.CreateModel(
            name="TaggedMinutes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.minuteslabel"
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_items",
                        to="core.minutes",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MinutesList",
            fields=[
                (
                    "basepage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.basepage",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="auth.group"),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.basepage",),
        ),
        migrations.AddField(
            model_name="minutes",
            name="labels",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="core.TaggedMinutes",
                to="core.MinutesLabel",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="minutes",
            name="moderator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="moderator",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="minutes",
            name="participants",
            field=modelcluster.fields.ParentalManyToManyField(
                related_name="minutes", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Footer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("column_1", wagtailmarkdown.fields.MarkdownField()),
                ("column_2", wagtailmarkdown.fields.MarkdownField()),
                ("column_3", wagtailmarkdown.fields.MarkdownField()),
                ("column_4", wagtailmarkdown.fields.MarkdownField()),
            ],
        ),
    ]
